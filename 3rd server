#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

int main(int argc, char *argv[]) {
    int fd, sockfd, newsockfd, clilen, portno, n;
    struct sockaddr_in seradd, cliadd;
    char buffer[4096];

    if (argc < 2) {
        fprintf(stderr, "\nNo port provided.\n");
        exit(1);
    }

    portno = atoi(argv[1]);
    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) {
        perror("\nError opening socket");
        exit(1);
    }

    bzero((char *)&seradd, sizeof(seradd));
    seradd.sin_family = AF_INET;
    seradd.sin_addr.s_addr = INADDR_ANY;
    seradd.sin_port = htons(portno);

    if (bind(sockfd, (struct sockaddr *)&seradd, sizeof(seradd)) < 0) {
        perror("\nError on binding");
        close(sockfd);
        exit(1);
    }

    listen(sockfd, 5);
    clilen = sizeof(cliadd);
    printf("\nServer waiting for client requests...\n");

    while (1) {
        newsockfd = accept(sockfd, (struct sockaddr *)&cliadd, (socklen_t *)&clilen);
        if (newsockfd < 0) {
            perror("\nError accepting connection");
            continue; // Continue to wait for other connections
        }

        bzero(buffer, sizeof(buffer));
        n = read(newsockfd, buffer, sizeof(buffer));
        if (n <= 0) {
            perror("\nError reading from socket");
            close(newsockfd);
            continue;
        }

        fd = open(buffer, O_RDONLY);
        if (fd < 0) {
            perror("\nRequested file does not exist");
            close(newsockfd);
            continue;
        }

        while ((n = read(fd, buffer, sizeof(buffer))) > 0) {
            if (write(newsockfd, buffer, n) < 0) {
                perror("\nError writing to socket");
                break;
            }
        }

        printf("\nFile transfer complete.\n");
        close(fd);
        close(newsockfd);
    }

    close(sockfd);
    return 0;
}
