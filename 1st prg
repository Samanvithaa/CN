#include <stdio.h>
#include <string.h>
#include <stdlib.h>

char data[100], concatdata[117], src_crc[17], dest_crc[17], frame[120], divident[18];
char divisor[18];
char res[17] = "0000000000000000";

void crc_cal(int node, int j) {
    int i;
    for (int k = 0; k < strlen(data) + 16; k++) {
        if (divident[0] == '1') {
            for (i = 1; i <= 16; i++) {
                if (divident[i] != divisor[i])
                    divident[i - 1] = '1';
                else
                    divident[i - 1] = '0';
            }
        } else {
            for (i = 1; i <= 16; i++)
                divident[i - 1] = divident[i];
        }
        if (node == 0)
            divident[i - 1] = concatdata[j++];
        else
            divident[i - 1] = frame[j++];
        divident[i] = '\0';
    }

    printf("\nCRC is: %s\n", divident);

    if (node == 0) {
        strcpy(src_crc, divident);
    } else {
        strcpy(dest_crc, divident);
    }
}

int main() {
    int i;

    printf("Enter the generator bits: ");
    gets(divisor);

    if (strlen(divisor) != 17) {
        printf("Please enter the generator of exactly 17 bits.\n");
        return 1;
    }

    printf("\nAt source node:\nEnter the message to be sent: ");
    gets(data);

    strcpy(concatdata, data);
    strcat(concatdata, "0000000000000000");

    for (i = 0; i < 17; i++)
        divident[i] = concatdata[i];
    divident[i] = '\0';

    crc_cal(0, 17);

    printf("\nData is: %s\n", data);
    printf("\nThe frame transmitted is:\n%s%s\n", data, src_crc);
    printf("\nSource node transmitted the frame.\n");

    printf("\nAt destination node:\nEnter the received frame: ");
    gets(frame);

    for (i = 0; i < 17; i++)
        divident[i] = frame[i];
    divident[i] = '\0';

    crc_cal(1, 17);

    if (strcmp(dest_crc, res) == 0) {
        printf("\nReceived frame is error-free.\n");
    } else {
        printf("\nReceived frame contains one or more errors.\n");
    }

    return 0;
}

input
geerator bits10001000000100001
crc=0101000010100101
